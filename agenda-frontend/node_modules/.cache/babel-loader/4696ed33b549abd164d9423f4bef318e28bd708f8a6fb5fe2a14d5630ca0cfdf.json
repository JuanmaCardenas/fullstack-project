{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JMCR-\\\\Documents\\\\Assessment\\\\agenda-frontend\\\\src\\\\components\\\\CustomDropdown.tsx\",\n  _s = $RefreshSig$();\nimport { DropdownButton } from 'react-bootstrap';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomDropdown = ({\n  numbers,\n  orgs,\n  user,\n  setUser\n}) => {\n  _s();\n  const [selected, setSelected] = useState();\n  const [newUser, setNewUser] = useState(user);\n  function handleSelect(value) {\n    setSelected(value);\n    if (typeof value === 'number') {\n      setNewUser(prevUser => {\n        if (!prevUser) return prevUser;\n        return {\n          ...prevUser,\n          phone_number: value\n        };\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [numbers && /*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"dropdown-basic-button\",\n      title: selected != undefined ? `${selected}` : \"Select a phone number\",\n      children: numbers.map((number, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: () => handleSelect(number.idAvalibleNumber),\n        children: number.idAvalibleNumber\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this), orgs && /*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"dropdown-basic-button\",\n      title: selected != undefined ? `${selected}` : \"Select an organisation\",\n      children: orgs.map((org, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: () => handleSelect(org),\n        children: org\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(CustomDropdown, \"NFqNK7FBCHaEzABFa5mMnxDl+E4=\");\n_c = CustomDropdown;\nexport default CustomDropdown;\nvar _c;\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"names":["DropdownButton","Dropdown","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomDropdown","numbers","orgs","user","setUser","_s","selected","setSelected","newUser","setNewUser","handleSelect","value","prevUser","phone_number","children","id","title","undefined","map","number","index","Item","onClick","idAvalibleNumber","fileName","_jsxFileName","lineNumber","columnNumber","org","_c","$RefreshReg$"],"sources":["C:/Users/JMCR-/Documents/Assessment/agenda-frontend/src/components/CustomDropdown.tsx"],"sourcesContent":["import { DropdownButton } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { avalibleNumber } from '../types/avalibleNumberType';\r\nimport { useState } from 'react';\r\nimport { User } from '../types/userType';\r\nimport { Organisation } from '../types/organisationType';\r\n\r\ninterface CustomDropdownProps {\r\n  numbers?: avalibleNumber[];\r\n  orgs?: string[];\r\n  selectedValue?: number | string;\r\n  user: User;\r\n  setUser: (user: User) => void;\r\n}\r\n\r\n\r\nconst CustomDropdown: React.FC<CustomDropdownProps> = ({ numbers, orgs, user, setUser }) => {\r\n  const [selected, setSelected] = useState<number | string>();\r\n  const [newUser, setNewUser] = useState<User>(user)\r\n  \r\n\r\n  function handleSelect(value: number | string){\r\n    setSelected(value);\r\n    if(typeof value === 'number'){\r\n      setNewUser(prevUser => {\r\n        if (!prevUser) return prevUser;\r\n        return { ...prevUser, phone_number: value};\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {numbers && (<DropdownButton id=\"dropdown-basic-button\" title={selected != undefined? `${selected}` : \"Select a phone number\"}>\r\n        {numbers.map((number, index) => (\r\n          <Dropdown.Item key={index} onClick={() => handleSelect(number.idAvalibleNumber)} >{number.idAvalibleNumber}</Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>)}\r\n      {orgs && (<DropdownButton id=\"dropdown-basic-button\" title={selected != undefined? `${selected}` : \"Select an organisation\"}>\r\n        {orgs.map((org, index) => (\r\n          <Dropdown.Item key={index} onClick={() => handleSelect(org)} >{org}</Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomDropdown;"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,iBAAiB;AAChD,OAAOC,QAAQ,MAAM,0BAA0B;AAE/C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAajC,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC1F,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAkB,CAAC;EAC3D,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAOQ,IAAI,CAAC;EAGlD,SAASO,YAAYA,CAACC,KAAsB,EAAC;IAC3CJ,WAAW,CAACI,KAAK,CAAC;IAClB,IAAG,OAAOA,KAAK,KAAK,QAAQ,EAAC;MAC3BF,UAAU,CAACG,QAAQ,IAAI;QACrB,IAAI,CAACA,QAAQ,EAAE,OAAOA,QAAQ;QAC9B,OAAO;UAAE,GAAGA,QAAQ;UAAEC,YAAY,EAAEF;QAAK,CAAC;MAC5C,CAAC,CAAC;IACJ;EACF;EAEA,oBACEd,OAAA,CAAAE,SAAA;IAAAe,QAAA,GACGb,OAAO,iBAAKJ,OAAA,CAACJ,cAAc;MAACsB,EAAE,EAAC,uBAAuB;MAACC,KAAK,EAAEV,QAAQ,IAAIW,SAAS,GAAE,GAAGX,QAAQ,EAAE,GAAG,uBAAwB;MAAAQ,QAAA,EAC3Hb,OAAO,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBvB,OAAA,CAACH,QAAQ,CAAC2B,IAAI;QAAaC,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAACS,MAAM,CAACI,gBAAgB,CAAE;QAAAT,QAAA,EAAGK,MAAM,CAACI;MAAgB,GAAtFH,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiG,CAC3H;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAE,EACjBzB,IAAI,iBAAKL,OAAA,CAACJ,cAAc;MAACsB,EAAE,EAAC,uBAAuB;MAACC,KAAK,EAAEV,QAAQ,IAAIW,SAAS,GAAE,GAAGX,QAAQ,EAAE,GAAG,wBAAyB;MAAAQ,QAAA,EACzHZ,IAAI,CAACgB,GAAG,CAAC,CAACU,GAAG,EAAER,KAAK,kBACnBvB,OAAA,CAACH,QAAQ,CAAC2B,IAAI;QAAaC,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAACkB,GAAG,CAAE;QAAAd,QAAA,EAAGc;MAAG,GAA9CR,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyD,CACnF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAE;EAAA,eAClB,CAAC;AAEP,CAAC;AAAAtB,EAAA,CA7BKL,cAA6C;AAAA6B,EAAA,GAA7C7B,cAA6C;AA+BnD,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}