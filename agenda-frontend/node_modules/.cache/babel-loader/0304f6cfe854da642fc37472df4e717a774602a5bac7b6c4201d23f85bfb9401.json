{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JMCR-\\\\Documents\\\\Assessment\\\\agenda-frontend\\\\src\\\\components\\\\CustomDropdown.tsx\",\n  _s = $RefreshSig$();\nimport { DropdownButton } from 'react-bootstrap';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomDropdown = ({\n  numbers,\n  selectedValue,\n  org\n}) => {\n  _s();\n  const [selected, setSelected] = useState();\n  function handleSelect(value) {\n    setSelected(value);\n  }\n  if (!numbers || numbers.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [numbers && /*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"dropdown-basic-button\",\n      title: selected != undefined ? `${selected}` : \"Seleccionar\",\n      children: numbers.map((number, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: () => handleSelect(number.idAvalibleNumber),\n        children: number.idAvalibleNumber\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }, this), org && /*#__PURE__*/_jsxDEV(DropdownButton, {\n      id: \"dropdown-basic-button\",\n      title: selected != undefined ? `${selected}` : \"Seleccionar\",\n      children: numbers.map((number, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        onClick: () => handleSelect(number.idAvalibleNumber),\n        children: number.idAvalibleNumber\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n};\n_s(CustomDropdown, \"kXmc8az0Vkgq+bIqhRCCKCKZWzs=\");\n_c = CustomDropdown;\nexport default CustomDropdown;\nvar _c;\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"names":["DropdownButton","Dropdown","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomDropdown","numbers","selectedValue","org","_s","selected","setSelected","handleSelect","value","length","children","fileName","_jsxFileName","lineNumber","columnNumber","id","title","undefined","map","number","index","Item","onClick","idAvalibleNumber","_c","$RefreshReg$"],"sources":["C:/Users/JMCR-/Documents/Assessment/agenda-frontend/src/components/CustomDropdown.tsx"],"sourcesContent":["import { DropdownButton } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { avalibleNumber } from '../types/avalibleNumberType';\r\nimport { useState } from 'react';\r\nimport { User } from '../types/userType';\r\nimport { Organisation } from '../types/organisationType';\r\n\r\ninterface CustomDropdownProps {\r\n  numbers?: avalibleNumber[];\r\n  org?: string[];\r\n  selectedValue?: number | string;\r\n}\r\n\r\n\r\nconst CustomDropdown: React.FC<CustomDropdownProps> = ({ numbers, selectedValue, org }) => {\r\n  const [selected, setSelected] = useState<number>();\r\n\r\n  function handleSelect(value: number){\r\n    setSelected(value);\r\n  }\r\n\r\n  if (!numbers || numbers.length === 0) {\r\n    return <p>No items available</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {numbers && (<DropdownButton id=\"dropdown-basic-button\" title={selected != undefined? `${selected}` : \"Seleccionar\"}>\r\n        {numbers.map((number, index) => (\r\n          <Dropdown.Item key={index} onClick={() => handleSelect(number.idAvalibleNumber)} >{number.idAvalibleNumber}</Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>)}\r\n      {org && (<DropdownButton id=\"dropdown-basic-button\" title={selected != undefined? `${selected}` : \"Seleccionar\"}>\r\n        {numbers.map((number, index) => (\r\n          <Dropdown.Item key={index} onClick={() => handleSelect(number.idAvalibleNumber)} >{number.idAvalibleNumber}</Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomDropdown;"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,iBAAiB;AAChD,OAAOC,QAAQ,MAAM,0BAA0B;AAE/C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAWjC,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,OAAO;EAAEC,aAAa;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAS,CAAC;EAElD,SAASY,YAAYA,CAACC,KAAa,EAAC;IAClCF,WAAW,CAACE,KAAK,CAAC;EACpB;EAEA,IAAI,CAACP,OAAO,IAAIA,OAAO,CAACQ,MAAM,KAAK,CAAC,EAAE;IACpC,oBAAOZ,OAAA;MAAAa,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,oBACEjB,OAAA,CAAAE,SAAA;IAAAW,QAAA,GACGT,OAAO,iBAAKJ,OAAA,CAACJ,cAAc;MAACsB,EAAE,EAAC,uBAAuB;MAACC,KAAK,EAAEX,QAAQ,IAAIY,SAAS,GAAE,GAAGZ,QAAQ,EAAE,GAAG,aAAc;MAAAK,QAAA,EACjHT,OAAO,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBvB,OAAA,CAACH,QAAQ,CAAC2B,IAAI;QAAaC,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACY,MAAM,CAACI,gBAAgB,CAAE;QAAAb,QAAA,EAAGS,MAAM,CAACI;MAAgB,GAAtFH,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiG,CAC3H;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAE,EACjBX,GAAG,iBAAKN,OAAA,CAACJ,cAAc;MAACsB,EAAE,EAAC,uBAAuB;MAACC,KAAK,EAAEX,QAAQ,IAAIY,SAAS,GAAE,GAAGZ,QAAQ,EAAE,GAAG,aAAc;MAAAK,QAAA,EAC7GT,OAAO,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBvB,OAAA,CAACH,QAAQ,CAAC2B,IAAI;QAAaC,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACY,MAAM,CAACI,gBAAgB,CAAE;QAAAb,QAAA,EAAGS,MAAM,CAACI;MAAgB,GAAtFH,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiG,CAC3H;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAE;EAAA,eAClB,CAAC;AAEP,CAAC;AAAAV,EAAA,CAzBKJ,cAA6C;AAAAwB,EAAA,GAA7CxB,cAA6C;AA2BnD,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}