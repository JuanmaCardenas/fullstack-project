{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JMCR-\\\\Documents\\\\Assessment\\\\agenda-frontend\\\\src\\\\components\\\\CustomDropdown.tsx\";\nimport { DropdownButton } from 'react-bootstrap';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomDropdown({\n  items,\n  selectedValue,\n  onSelect\n}) {\n  if (!items || items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this); // O algún otro mensaje indicando que no hay items\n  }\n  return /*#__PURE__*/_jsxDEV(DropdownButton, {\n    id: \"dropdown-basic-button\",\n    title: \"Seleccionar\",\n    children: items.map((item, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      onClick: () => onSelect,\n      children: item.idAvalibleNumber\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = CustomDropdown;\nexport default CustomDropdown;\nvar _c;\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"names":["DropdownButton","Dropdown","jsxDEV","_jsxDEV","CustomDropdown","items","selectedValue","onSelect","length","children","fileName","_jsxFileName","lineNumber","columnNumber","id","title","map","item","index","Item","onClick","idAvalibleNumber","_c","$RefreshReg$"],"sources":["C:/Users/JMCR-/Documents/Assessment/agenda-frontend/src/components/CustomDropdown.tsx"],"sourcesContent":["import { keyboard } from '@testing-library/user-event/dist/keyboard';\r\nimport { DropdownButton } from 'react-bootstrap';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { avalibleNumber } from '../types/avalibleNumberType';\r\n\r\ninterface CustomDropdownProps {\r\n  items: avalibleNumber[];\r\n  selectedValue?: number;\r\n  onSelect: (value : number) => void;\r\n}\r\n\r\n\r\nfunction CustomDropdown({ items, selectedValue, onSelect }: CustomDropdownProps) {\r\n  if (!items || items.length === 0) {\r\n    return <p>No items available</p>; // O algún otro mensaje indicando que no hay items\r\n  }\r\n\r\n  return (\r\n    <DropdownButton id=\"dropdown-basic-button\" title=\"Seleccionar\">\r\n      {items.map((item, index) => (\r\n        <Dropdown.Item key={index} onClick={() => onSelect} >{item.idAvalibleNumber}</Dropdown.Item>\r\n      ))}\r\n    </DropdownButton>\r\n  );\r\n}\r\n\r\nexport default CustomDropdown;"],"mappings":";AACA,SAASA,cAAc,QAAQ,iBAAiB;AAChD,OAAOC,QAAQ,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUhD,SAASC,cAAcA,CAAC;EAAEC,KAAK;EAAEC,aAAa;EAAEC;AAA8B,CAAC,EAAE;EAC/E,IAAI,CAACF,KAAK,IAAIA,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;IAChC,oBAAOL,OAAA;MAAAM,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EACpC;EAEA,oBACEV,OAAA,CAACH,cAAc;IAACc,EAAE,EAAC,uBAAuB;IAACC,KAAK,EAAC,aAAa;IAAAN,QAAA,EAC3DJ,KAAK,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBf,OAAA,CAACF,QAAQ,CAACkB,IAAI;MAAaC,OAAO,EAAEA,CAAA,KAAMb,QAAS;MAAAE,QAAA,EAAGQ,IAAI,CAACI;IAAgB,GAAvDH,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkE,CAC5F;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAErB;AAACS,EAAA,GAZQlB,cAAc;AAcvB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}