{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { userService } from \"../services/userService\";\nimport { useEffect, useState } from \"react\";\nimport { numberService } from \"../services/numberService\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditUser() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [user, setUser] = useState();\n  const [avalibleNumbers, setAvalibleNumbers] = useState([]);\n  const fetchUser = async () => {\n    try {\n      let idUser = Number(id);\n      const response = await userService.getUserById(idUser);\n      setUser(response);\n    } catch (error) {}\n  };\n  const fetchNumbers = async () => {\n    try {\n      const response = await numberService.getAvalibleNumber();\n      setAvalibleNumbers(response);\n    } catch (error) {}\n  };\n  useEffect(() => {\n    fetchUser();\n    fetchNumbers();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(EditUser, \"Kcr30gebzO4tY8sp9AhZPlX3Efw=\", false, function () {\n  return [useParams];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["useParams","userService","useEffect","useState","numberService","Fragment","_Fragment","jsxDEV","_jsxDEV","EditUser","_s","id","user","setUser","avalibleNumbers","setAvalibleNumbers","fetchUser","idUser","Number","response","getUserById","error","fetchNumbers","getAvalibleNumber","_c","$RefreshReg$"],"sources":["C:/Users/JMCR-/Documents/Assessment/agenda-frontend/src/pages/EditUser.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { userService } from \"../services/userService\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { User } from \"../types/userType\";\r\nimport { numberService } from \"../services/numberService\";\r\nimport { avalibleNumber } from '../types/avalibleNumberType';\r\n\r\nfunction EditUser(){\r\n    const {id} = useParams<string>();\r\n    const [user, setUser] = useState<User>();\r\n    const [avalibleNumbers, setAvalibleNumbers] = useState<avalibleNumber[]>([])\r\n\r\n    const fetchUser = async () => {\r\n        try {\r\n            let idUser = Number(id);\r\n            const response = await userService.getUserById(idUser);\r\n            setUser(response);\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    const fetchNumbers = async () => {\r\n        try {\r\n            const response = await numberService.getAvalibleNumber();\r\n            setAvalibleNumbers(response)\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUser();\r\n        fetchNumbers();\r\n    }, [id])\r\n\r\n    return(\r\n        <></>\r\n    );\r\n\r\n}\r\n\r\nexport default EditUser;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,aAAa,QAAQ,2BAA2B;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAG1D,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM;IAACC;EAAE,CAAC,GAAGX,SAAS,CAAS,CAAC;EAChC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAO,CAAC;EACxC,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAmB,EAAE,CAAC;EAE5E,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,IAAIC,MAAM,GAAGC,MAAM,CAACP,EAAE,CAAC;MACvB,MAAMQ,QAAQ,GAAG,MAAMlB,WAAW,CAACmB,WAAW,CAACH,MAAM,CAAC;MACtDJ,OAAO,CAACM,QAAQ,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE,CAEhB;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMH,QAAQ,GAAG,MAAMf,aAAa,CAACmB,iBAAiB,CAAC,CAAC;MACxDR,kBAAkB,CAACI,QAAQ,CAAC;IAChC,CAAC,CAAC,OAAOE,KAAK,EAAE,CAEhB;EACJ,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZc,SAAS,CAAC,CAAC;IACXM,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACX,EAAE,CAAC,CAAC;EAER,oBACIH,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAGb;AAACI,EAAA,CAjCQD,QAAQ;EAAA,QACAT,SAAS;AAAA;AAAAwB,EAAA,GADjBf,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}