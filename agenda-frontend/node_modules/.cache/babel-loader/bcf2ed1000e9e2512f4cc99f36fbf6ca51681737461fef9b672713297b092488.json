{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { userService } from \"../services/userService\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditUser() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const fetchUser = async () => {\n    try {\n      let idUser = Number(id);\n      const response = await userService.getUserById(idUser);\n    } catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(EditUser, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n_c = EditUser;\nexport default EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["useParams","userService","Fragment","_Fragment","jsxDEV","_jsxDEV","EditUser","_s","id","fetchUser","idUser","Number","response","getUserById","error","_c","$RefreshReg$"],"sources":["C:/Users/JMCR-/Documents/Assessment/agenda-frontend/src/pages/EditUser.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { userService } from \"../services/userService\";\r\n\r\n\r\nfunction EditUser(){\r\n    const {id} = useParams<string>();\r\n\r\n    const fetchUser = async () => {\r\n        try {\r\n            let idUser = Number(id);\r\n            const response = await userService.getUserById(idUser)\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    return(\r\n        <></>\r\n    );\r\n\r\n}\r\n\r\nexport default EditUser;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAGtD,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM;IAACC;EAAE,CAAC,GAAGR,SAAS,CAAS,CAAC;EAEhC,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,IAAIC,MAAM,GAAGC,MAAM,CAACH,EAAE,CAAC;MACvB,MAAMI,QAAQ,GAAG,MAAMX,WAAW,CAACY,WAAW,CAACH,MAAM,CAAC;IAE1D,CAAC,CAAC,OAAOI,KAAK,EAAE,CAEhB;EACJ,CAAC;EAED,oBACIT,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAGb;AAACI,EAAA,CAjBQD,QAAQ;EAAA,QACAN,SAAS;AAAA;AAAAe,EAAA,GADjBT,QAAQ;AAmBjB,eAAeA,QAAQ;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}